apiVersion: v1
kind: Namespace
metadata:
  name: parkore
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: parkore
  name: parkore
  namespace: parkore
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: 'Environment=staging'
spec:
  ports:
  - name: api
    port: 80
    targetPort: 5000
  selector:
    app: parkore
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: parkore
  namespace: parkore
  labels:
    app: parkore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parkore
  template:
    metadata:
      labels:
        app: parkore
    spec:
      containers:
      - name: parkore
        image: 445227032534.dkr.ecr.us-east-1.amazonaws.com/parkore:0.0.7
        ports:
          - containerPort: 5000
        resources:
          limits:
            cpu: .2
            memory: 256Mi
          requests:
            cpu: .1
            memory: 128Mi
        env:
        - name: RABBITMQ_SERVICE_HOST
          value: "rabbitmq-mgmt.metis.wtf"
        - name: RABBITMQ_SERVICE_PORT
          value: "5672"
        - name: RABBITMQ_DEFAULT_USER
          value: "guest"
        - name: RABBITMQ_DEFAULT_PASS
          value: "guest"