apiVersion: v1
kind: Service
metadata:
  labels:
    app: parking
  name: parking
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: 'Environment=staging'
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8000
  selector:
    app: parking
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parking
  labels:
    app: parking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parking
  template:
    metadata:
      labels:
        app: parking
    spec:
      containers:
      - name: parking
        image: 445227032534.dkr.ecr.us-east-1.amazonaws.com/apollo:0.4.0-6a8c28a
        ports:
          - containerPort: 8000
        resources:
          limits:
            cpu: .2
            memory: 256Mi
          requests:
            cpu: .1
            memory: 128Mi
        env:
        - name: RABBITMQ_SERVICE_HOST
          value: "rabbitmq-mgmt.metis.wtf"
        - name: RABBITMQ_SERVICE_PORT
          value: "5672"
        - name: RABBITMQ_DEFAULT_USER
          value: "guest"
        - name: RABBITMQ_DEFAULT_PASS
          value: "guest"